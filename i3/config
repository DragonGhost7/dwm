# _ _____                    __ _
#(_)___ /    ___ ___  _ __  / _(_) __ _
#| | |_ \   / __/ _ \| '_ \| |_| |/ _` |
#| |___) | | (_| (_) | | | |  _| | (_| |
#|_|____/   \___\___/|_| |_|_| |_|\__, |
#                                 |___/
# "Made" by me and i mean kitbashed from random stuff i find on r/UnixPorn
#
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

new_window  1pixel
gaps inner 5
gaps outer 5
#gaps horizontal 5
#gaps vertical 5
#gaps top 5
#gaps right 5
#gaps bottom 5
#gaps left 5
set $mod2 Mod4
set $mod Mod1


set $term --no-startup-id termite
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Code Pro 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
#lock
# Set Xresources colors:
#exec xrdb /home/darkghost/.cache/wal/volors.Xressources
set_from_resource $fg color0 #f0f0f0
set_from_resource $bg color7 #f0f0f0
#set_from_resource $darkblack    color0  #000000
#set_from_resource $black    color8  #000000
#set_from_resource $darkred  color1  #000000
#set_from_resource $red      color9  #000000
#set_from_resource $darkgreen    color2  #000000
#set_from_resource $green    color10 #000000
#set_from_resource $darkyellow   color3  #000000
#set_from_resource $yellow   color11 #000000
#set_from_resource $darkblue color4  #000000
#set_from_resource $blue     color12 #000000
#set_from_resource $darkmagenta  color5  #000000
#set_from_resource $magenta  color13 #000000
#set_from_resource $darkcyan color6  #000000
#set_from_resource $cyan     color14 #000000
#set_from_resource $darkwhite    color7  #000000
#set_from_resource $white    color15 #000000
#set $transparent #00000000
##                       BORDER      BACKGROUND  TEXT        INDICATOR   CHILD_BORDER
#client.focused          $red      $red      $magenta  $darkmagenta    $darkblue
#client.unfocused        $transparent    $blue       $white      $darkblue       $darkblack
#client.focused_inactive $transparent    $blue       $white      $darkblue       $darkblack
#client.urgent           $darkred    $darkred    $black      $darkred        $darkred
#client.background       $black


#bindsym $mod2+l exec mortylocker
#bindsym $mod2+k exec mortylocker && systemctl suspend
#
# start a terminal
#bindsym $mod+Return exec $term

bindsym $mod+F3 exec sudo systemctl suspend
#bindsym $mod+F4 exec arandr

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
#bindsym $mod+d exec --no-startup-id rofi -config ~/.config/rofi/config.rasi -show run
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+semicolon split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child
#workspaces variables
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9
set $ws10 10

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
#



## Window settings

for_window [title="video0 - mpv"] floating enable
for_window [title="video0 - mpv"] sticky enable
for_window [title="mpvfloat"] floating enable
for_window [title="mpvfloat"] sticky enable

for_window [title=".*mpv"] floating enable
for_window [title="npm"]  layout stacking
for_window [class="(?i)conky"] floating enable border none sticky enable

#
#
#Gaps mode
#

set $mode_gaps Gaps: (o)uter, (i)nner
#(h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
#        bindsym h      mode "$mode_gaps_horiz"
#        bindsym v      mode "$mode_gaps_verti"
#        bindsym t      mode "$mode_gaps_top"
#        bindsym r      mode "$mode_gaps_right"
#        bindsym b      mode "$mode_gaps_bottom"
#        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}





# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#*******************************************************************
#screen recording stuff
#bindsym $mod2+s exec --no-startup-id "killall screenkey || screenkey"
#bindsym $mod2+b exec --no-startup-id "/home/darkghost/.bin/screenshot"
#bindsym Shift+Print exec --no-startup-id /home/darkghost/.bin/dmenurecord
#bindsym $mod+c exec --no-startup-id /home/darkghost/.bin/camtoggle

#mount-unmount stuff
#bindsym $mod+m exec --no-startup-id /home/darkghost/.bin/dmenumount
#bindsym $mod+u exec --no-startup-id /home/darkghost/.bin/dmenuunmount



#bindsym XF86AudioRaiseVolume exec --no-startup-id  pactl set-sink-volume 0 +5%
#bindsym $mod2+w exec --no-startup-id dmenuunicode
#bindsym $mod2+e exec --no-startup-id mpc volume +5
#bindsym $mod2+d exec --no-startup-id mpc volume -5
#bindsym $mod2+p exec --no-startup-id mpc toggle
#bindsym $mod2+n exec --no-startup-id mpc next
#bindsym $mod2+o exec --no-startup-id /home/darkghost/.bin/dmenuplaylist
#bindsym $mod2+a exec --no-startup-id /home/darkghost/.bin/dmenusong
#bindsym XF86AudioLowerVolume exec --no-startup-id  pactl set-sink-volume 0 -5%
bindsym XF86LaunchA exec --no-startup-id systemctl suspend
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
#bindsym XF86MonBrightnessUp exec --no-startup-id xrandr --output eDP-1 --brightness $(echo "$(xrandr --verbose |grep Brightness |grep -o '[0-9].*')+0.1" | bc)
#bindsym XF86MonBrightnessDown exec --no-startup-id xrandr --output eDP-1 --brightness $(echo "$(xrandr --verbose |grep Brightness |grep -o '[0-9].*')-0.1" | bc)

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)r {i
#bar {
#    font pango:FontAwesome 12
#            colors {
#            background $darkblack
#            statusline $darkwhite
#            separator $cyan
#            focused_workspace  $blue $darkblue $darkblack
#                active_workspace   $blue $blue $darkwhite
#                inactive_workspace $darkblack $darkblack $white
#                urgent_workspace   $darkblack $darkblack $white
#        }
#    status_command i3blocks -c /home/darkghost/.i3/i3blocks.conf
#    position top
    #mode dock
#    modifier None
#}

exec_always --no-startup-id touch /tmp/recordingicon
exec_always --no-startup-id compton
exec_always --no-startup-id /home/darkghost/.config/polybar/launch.sh
